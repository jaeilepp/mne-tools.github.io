

.. _sphx_glr_auto_examples_preprocessing_plot_virtual_evoked.py:


=======================
Remap MEG channel types
=======================

In this example, MEG data are remapped from one
channel type to another. This is useful to:

    - visualize combined magnetometers and gradiometers as magnetometers
      or gradiometers.
    - run statistics from both magnetometers and gradiometers while
      working with a single type of channels.



.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /auto_examples/preprocessing/images/sphx_glr_plot_virtual_evoked_001.png
            :scale: 47

    *

      .. image:: /auto_examples/preprocessing/images/sphx_glr_plot_virtual_evoked_002.png
            :scale: 47

    *

      .. image:: /auto_examples/preprocessing/images/sphx_glr_plot_virtual_evoked_003.png
            :scale: 47

    *

      .. image:: /auto_examples/preprocessing/images/sphx_glr_plot_virtual_evoked_004.png
            :scale: 47





.. code-block:: python


    # Author: Mainak Jas <mainak.jas@telecom-paristech.fr>

    # License: BSD (3-clause)

    import mne
    from mne.datasets import sample

    print(__doc__)

    # read the evoked
    data_path = sample.data_path()
    fname = data_path + '/MEG/sample/sample_audvis-ave.fif'
    evoked = mne.read_evokeds(fname, condition='Left Auditory', baseline=(None, 0))

    # go from grad + mag to mag
    virt_evoked = evoked.as_type('mag')
    evoked.plot_topomap(ch_type='mag', title='mag (original)')
    virt_evoked.plot_topomap(ch_type='mag',
                             title='mag (interpolated from mag + grad)')

    # go from grad + mag to grad
    virt_evoked = evoked.as_type('grad')
    evoked.plot_topomap(ch_type='grad', title='grad (original)')
    virt_evoked.plot_topomap(ch_type='grad',
                             title='grad (interpolated from mag + grad)')

**Total running time of the script:**
(0 minutes 13.876 seconds)



.. container:: sphx-glr-download

    **Download Python source code:** :download:`plot_virtual_evoked.py <plot_virtual_evoked.py>`


.. container:: sphx-glr-download

    **Download IPython notebook:** :download:`plot_virtual_evoked.ipynb <plot_virtual_evoked.ipynb>`
